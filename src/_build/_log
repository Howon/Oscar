### Starting build.
# Target: oscar.ml.depends, tags: { bin_annot, debug, extension:ml, file:oscar.ml, ocaml, ocamldep, package(core), ppx(ppx-jane -as-ppx), quiet, short_paths, thread, traverse }
ocamlfind ocamldep -package core -ppx 'ppx-jane -as-ppx' -modules oscar.ml > oscar.ml.depends
# Target: analyzer.ml.depends, tags: { bin_annot, debug, extension:ml, file:analyzer.ml, ocaml, ocamldep, package(core), ppx(ppx-jane -as-ppx), quiet, short_paths, thread, traverse }
ocamlfind ocamldep -package core -ppx 'ppx-jane -as-ppx' -modules analyzer.ml > analyzer.ml.depends
# Target: ast.ml.depends, tags: { bin_annot, debug, extension:ml, file:ast.ml, ocaml, ocamldep, package(core), ppx(ppx-jane -as-ppx), quiet, short_paths, thread, traverse }
ocamlfind ocamldep -package core -ppx 'ppx-jane -as-ppx' -modules ast.ml > ast.ml.depends
# Target: sast.ml.depends, tags: { bin_annot, debug, extension:ml, file:sast.ml, ocaml, ocamldep, package(core), ppx(ppx-jane -as-ppx), quiet, short_paths, thread, traverse }
ocamlfind ocamldep -package core -ppx 'ppx-jane -as-ppx' -modules sast.ml > sast.ml.depends
# Target: ast.cmo, tags: { bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:ast.cmo, file:ast.ml, implem, ocaml, package(core), ppx(ppx-jane -as-ppx), quiet, short_paths, thread, traverse }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -safe-string -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o ast.cmo ast.ml
# Target: sast.cmo, tags: { bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:sast.cmo, file:sast.ml, implem, ocaml, package(core), ppx(ppx-jane -as-ppx), quiet, short_paths, thread, traverse }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -safe-string -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o sast.cmo sast.ml
# Target: parser.mly, tags: { bin_annot, debug, extension:mly, file:parser.mly, infer, ocaml, ocamlyacc, package(core), parser, ppx(ppx-jane -as-ppx), quiet, short_paths, thread, traverse }
/usr/local/bin/ocamlyacc parser.mly
# Target: parser.mli.depends, tags: { bin_annot, debug, extension:mli, file:parser.mli, ocaml, ocamldep, package(core), ppx(ppx-jane -as-ppx), quiet, short_paths, thread, traverse }
ocamlfind ocamldep -package core -ppx 'ppx-jane -as-ppx' -modules parser.mli > parser.mli.depends
# Target: scanner.mll, tags: { bin_annot, debug, extension:mll, file:scanner.mll, lexer, ocaml, ocamllex, package(core), ppx(ppx-jane -as-ppx), quiet, short_paths, thread, traverse }
/usr/local/bin/ocamllex.opt -q scanner.mll
# Target: scanner.ml.depends, tags: { bin_annot, debug, extension:ml, file:scanner.ml, ocaml, ocamldep, package(core), ppx(ppx-jane -as-ppx), quiet, short_paths, thread, traverse }
ocamlfind ocamldep -package core -ppx 'ppx-jane -as-ppx' -modules scanner.ml > scanner.ml.depends
# Target: parser.cmi, tags: { bin_annot, byte, compile, debug, extension:mli, file:parser.mli, interf, ocaml, package(core), ppx(ppx-jane -as-ppx), quiet, short_paths, thread, traverse }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -safe-string -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o parser.cmi parser.mli
# Target: transpile.ml.depends, tags: { bin_annot, debug, extension:ml, file:transpile.ml, ocaml, ocamldep, package(core), ppx(ppx-jane -as-ppx), quiet, short_paths, thread, traverse }
ocamlfind ocamldep -package core -ppx 'ppx-jane -as-ppx' -modules transpile.ml > transpile.ml.depends
# Target: analyzer.cmo, tags: { bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:analyzer.cmo, file:analyzer.ml, implem, ocaml, package(core), ppx(ppx-jane -as-ppx), quiet, short_paths, thread, traverse }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -safe-string -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o analyzer.cmo analyzer.ml
+ ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -safe-string -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o analyzer.cmo analyzer.ml
File "analyzer.ml", line 227, characters 29-30:
Warning 28: wildcard pattern given as argument to a constant constructor
# Target: scanner.cmo, tags: { bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:scanner.cmo, file:scanner.ml, implem, ocaml, package(core), ppx(ppx-jane -as-ppx), quiet, short_paths, thread, traverse }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -safe-string -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o scanner.cmo scanner.ml
# Target: transpile.cmo, tags: { bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:transpile.cmo, file:transpile.ml, implem, ocaml, package(core), ppx(ppx-jane -as-ppx), quiet, short_paths, thread, traverse }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -safe-string -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o transpile.cmo transpile.ml
+ ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -safe-string -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o transpile.cmo transpile.ml
File "transpile.ml", line 95, characters 21-29:
Warning 27: unused variable sformals.
File "transpile.ml", line 150, characters 15-24:
Warning 27: unused variable smessages.
File "transpile.ml", line 150, characters 26-33:
Warning 27: unused variable sactors.
# Target: oscar.cmo, tags: { bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:oscar.cmo, file:oscar.ml, implem, ocaml, package(core), ppx(ppx-jane -as-ppx), quiet, short_paths, thread, traverse }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -safe-string -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o oscar.cmo oscar.ml
+ ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -safe-string -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o oscar.cmo oscar.ml
File "oscar.ml", line 75, characters 18-28:
Warning 6: labels were omitted in the application of this function.
File "oscar.ml", line 74, characters 22-28:
Warning 26: unused variable length.
# Target: ast.cmx, tags: { bin_annot, compile, debug, extension:cmx, extension:ml, file:ast.cmx, file:ast.ml, implem, native, ocaml, package(core), ppx(ppx-jane -as-ppx), quiet, short_paths, thread, traverse }
ocamlfind ocamlopt -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -safe-string -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o ast.cmx ast.ml
# Target: sast.cmx, tags: { bin_annot, compile, debug, extension:cmx, extension:ml, file:sast.cmx, file:sast.ml, implem, native, ocaml, package(core), ppx(ppx-jane -as-ppx), quiet, short_paths, thread, traverse }
ocamlfind ocamlopt -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -safe-string -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o sast.cmx sast.ml
# Target: parser.ml.depends, tags: { bin_annot, debug, extension:ml, file:parser.ml, ocaml, ocamldep, package(core), ppx(ppx-jane -as-ppx), quiet, short_paths, thread, traverse }
ocamlfind ocamldep -package core -ppx 'ppx-jane -as-ppx' -modules parser.ml > parser.ml.depends
# Target: parser.cmx, tags: { bin_annot, compile, debug, extension:cmx, extension:ml, file:parser.cmx, file:parser.ml, implem, native, ocaml, package(core), ppx(ppx-jane -as-ppx), quiet, short_paths, thread, traverse }
ocamlfind ocamlopt -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -safe-string -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o parser.cmx parser.ml
# Target: analyzer.cmx, tags: { bin_annot, compile, debug, extension:cmx, extension:ml, file:analyzer.cmx, file:analyzer.ml, implem, native, ocaml, package(core), ppx(ppx-jane -as-ppx), quiet, short_paths, thread, traverse }
ocamlfind ocamlopt -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -safe-string -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o analyzer.cmx analyzer.ml
+ ocamlfind ocamlopt -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -safe-string -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o analyzer.cmx analyzer.ml
File "analyzer.ml", line 227, characters 29-30:
Warning 28: wildcard pattern given as argument to a constant constructor
# Target: scanner.cmx, tags: { bin_annot, compile, debug, extension:cmx, extension:ml, file:scanner.cmx, file:scanner.ml, implem, native, ocaml, package(core), ppx(ppx-jane -as-ppx), quiet, short_paths, thread, traverse }
ocamlfind ocamlopt -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -safe-string -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o scanner.cmx scanner.ml
# Target: transpile.cmx, tags: { bin_annot, compile, debug, extension:cmx, extension:ml, file:transpile.cmx, file:transpile.ml, implem, native, ocaml, package(core), ppx(ppx-jane -as-ppx), quiet, short_paths, thread, traverse }
ocamlfind ocamlopt -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -safe-string -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o transpile.cmx transpile.ml
+ ocamlfind ocamlopt -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -safe-string -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o transpile.cmx transpile.ml
File "transpile.ml", line 95, characters 21-29:
Warning 27: unused variable sformals.
File "transpile.ml", line 150, characters 15-24:
Warning 27: unused variable smessages.
File "transpile.ml", line 150, characters 26-33:
Warning 27: unused variable sactors.
# Target: oscar.cmx, tags: { bin_annot, compile, debug, extension:cmx, extension:ml, file:oscar.cmx, file:oscar.ml, implem, native, ocaml, package(core), ppx(ppx-jane -as-ppx), quiet, short_paths, thread, traverse }
ocamlfind ocamlopt -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -safe-string -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o oscar.cmx oscar.ml
+ ocamlfind ocamlopt -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -safe-string -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o oscar.cmx oscar.ml
File "oscar.ml", line 75, characters 18-28:
Warning 6: labels were omitted in the application of this function.
File "oscar.ml", line 74, characters 22-28:
Warning 26: unused variable length.
# Target: oscar.native, tags: { bin_annot, debug, dont_link_with, extension:native, file:oscar.native, link, native, ocaml, package(core), ppx(ppx-jane -as-ppx), program, quiet, short_paths, thread, traverse }
ocamlfind ocamlopt -linkpkg -g -thread -package core ast.cmx sast.cmx analyzer.cmx parser.cmx scanner.cmx transpile.cmx oscar.cmx -o oscar.native
# Compilation successful.
