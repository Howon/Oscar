message setPing(ping: actor);
message setPong(pong: actor);
message setMaxTurns(max: int);
message startMsg();
message stopMsg();
message pingMsg();
message pongMsg();

actor Ping {
  mut int count = 0;
  mut int maxTurns = 5;
  mut actor pong;

  def incrementAndPrint() => unit = {
    count = count + 1;
    println("ping");
  }

  receive {
    | setPong(myPong: actor) => {
        pong = myPong;
      }
    | setMaxTurns(max: int) => {
        maxTurns = max;
      }
    | startMsg() => {
        incrementAndPrint();
        pingMsg |> pong;
      }
    | pongMsg() => {
        incrementAndPrint();

        if (count > maxTurns) {
            println("ping stopped");
            stopMsg |> pong;
        } else {
            pingMsg |> pong;
        }
      }
  }
}

actor Pong {
  mut actor ping;

  receive {
    | setPing(myPing: actor) => {
          ping = myPing;
      }
    | pingMsg() => {
        println("  pong");
        pongMsg |> ping
      }
    | stopMsg() => {
        println("pong stopped");
      }
  }
}


def main() => unit = {
  Ping ping = spawn Ping();
  Pong pong = spawn Pong();

  setPong(pong) |> ping;
  setMaxTurns(3) |> ping;

  setPing(ping) |> pong;

  startMsg() |> ping;
}